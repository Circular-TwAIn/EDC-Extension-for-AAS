# IDS AAS Extension specific
edc.aas.exposeSelfDescription = False

# EDC specific values
web.http.port=9191
web.http.path=/api
# Port and path for requesting an EDC to communicate with another EDC by IDS messages (consumer-provider)
web.http.management.port=9192
web.http.management.path=/api/v1/data
# Port and path for IDS messages (from another EDC)
web.http.protocol.port = 9292
web.http.protocol.path = /api/v1/ids

edc.api.auth.key=password

# GUI configuration (enable DataDashboard to communicate with EDC)
edc.web.rest.cors.enabled = true
edc.web.rest.cors.origins = *
edc.web.rest.cors.headers = x-api-key, content-type
edc.web.rest.cors.methods = GET, POST, DELETE, PUT, OPTIONS

# IDS specific (see EDC/data-protocols/ids/ids-core/README.md)
edc.ids.id = urn:connector:consumer
edc.ids.title = "Eclipse Dataspace Connector with AAS support"
edc.ids.description = "EDC with extension IDS-AAS-App enabled"
edc.ids.maintainer = iosb
edc.ids.curator = https://example.com
edc.ids.endpoint = https://example.com
edc.ids.security.profile = base
edc.ids.catalog.id = urn:catalog:default

# Set this to the address at which another connector can reach your connector,
# as it is used as a callback address during the contract negotiation, 
# where messages are exchanged asynchronously. If you change the IDS API port,
# make sure to adjust the webhook address accordingly.
ids.webhook.address=http://consumer:9292
